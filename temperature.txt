#include<reg51.h>
sbit en=P3^6;   //Enable (EN) pin
sbit cs=P3^0;
sbit wr= P3^1;
sbit rd= P3^2;
sbit intr= P0^0;
char cel[]="CELSIUS TEMP";
char far[]="FAHRENHEIT TEMP";

void delay(unsigned int time)  //Time delay function
{
unsigned int i,j;
for(i=0;i< time;i++)
  for(j=0;j<5;j++);
}
void lcdcmd(unsigned char value)  //Function for sending values to the command register of LCD
{
P1=value;
P3=0x40;
delay(50);
en=0;
delay(50);
return;
}
void display(unsigned char value)  //Function for sending values to the data register of LCD
{
P1=value;
P3=0x60;
delay(500);
en=0;
delay(50);
return;
}

void lcdint(void)         //function to initialize the registers and pins of LCD
{
 delay(15000);
   display(0x30);
     delay(4500);
   display(0x30);
     delay(300);
   display(0x30);
     delay(650);
lcdcmd(0x38);
    lcdcmd(0x0F);
    lcdcmd(0x01);
    lcdcmd(0x06);
    lcdcmd(0x80);
}

void farenheit(unsigned int Adcvalue){

unsigned int Adcvalue1,i=0;
char ch1,ch2,ch3;
lcdcmd(0x80);
while(far[i]!='\0'){
display(far[i]);
i++;
}
lcdcmd(0xC7);
ch1=Adcvalue/100;
if(ch1!=0)
display(ch1+0x30);
delay(100);
Adcvalue1=Adcvalue%100;
ch2=Adcvalue1/10;
display(ch2+0x30);
ch3=Adcvalue1-(ch2*10);
display(ch3);
delay(10000);
lcdcmd(0x01);
}
#include<reg51.h>
sbit en=P3^6;   //Enable (EN) pin
sbit cs=P3^0;
sbit wr= P3^1;
sbit rd= P3^2;
sbit intr= P0^0;
char cel[]="CELSIUS TEMP";
char far[]="FAHRENHEIT TEMP";

void delay(unsigned int time)  //Time delay function
{
unsigned int i,j;
for(i=0;i< time;i++)
  for(j=0;j<5;j++);
}
void lcdcmd(unsigned char value)  //Function for sending values to the command register of LCD
{
P1=value;
P3=0x40;
delay(50);
en=0;
delay(50);
return;
}
void display(unsigned char value)  //Function for sending values to the data register of LCD
{
P1=value;
P3=0x60;
delay(500);
en=0;
delay(50);
return;
}

void lcdint(void)         //function to initialize the registers and pins of LCD
{
 delay(15000);
   display(0x30);
     delay(4500);
   display(0x30);
     delay(300);
   display(0x30);
     delay(650);
lcdcmd(0x38);
    lcdcmd(0x0F);
    lcdcmd(0x01);
    lcdcmd(0x06);
    lcdcmd(0x80);
}

void farenheit(unsigned int Adcvalue){

unsigned int Adcvalue1,i=0;
char ch1,ch2,ch3;
lcdcmd(0x80);
while(far[i]!='\0'){
display(far[i]);
i++;
}
lcdcmd(0xC7);
ch1=Adcvalue/100;
if(ch1!=0)
display(ch1+0x30);
delay(100);
Adcvalue1=Adcvalue%100;
ch2=Adcvalue1/10;
display(ch2+0x30);
ch3=Adcvalue1-(ch2*10);
display(ch3);
delay(10000);
lcdcmd(0x01);
}
void main()
{
unsigned int Adcvalue,Adcvalue1,i=0;
char ch1,ch2,ch3;
P0=0x01;
P1=0x00;              //Declared as Output port
P3=0x00;             //Output port
P2=0xFF;             //Input port
lcdint();
while (1){
delay(10000);
cs=0;                 //chipselect is on now --It is active low pin
wr=0;                 // write is enabled --It is also active low
delay(10);
wr=1;                       //start conversion analog to digital
rd=1;                  
while(intr==1);            //The looop runs until intr==1 and when intr==0 
                           //it jumps to next iteration
rd=0;                     //read the digital output from adc
Adcvalue=P2;
i=0;
while(cel[i]!='\0'){
display(cel[i]);
i++;
}
lcdcmd(0xC7);
ch1=Adcvalue/100;
if(ch1!=0)
display(ch1+0x30);
delay(100);
Adcvalue1=Adcvalue%100;
ch2=Adcvalue1/10;
display(ch2+0x30);
ch3=Adcvalue1-(ch2*10);
display(ch3);
delay(10000);
lcdcmd(0x01);
farenheit(((Adcvalue)* (9 / 5)) + 32);
}}
